# 🏃‍♀️ Continuous Integration and Delivery: Stable
# ===============================================
#
# Note: for this workflow to succeed, the following secrets must be installed
# in the repository:
#
# ``ADMIN_GITHUB_TOKEN``
#     A personal access token of a user with collaborator or better access to
#     the project repository. You can generate this by visiting GitHub →
#     Settings → Developer settings → Personal access tokens → Generate new
#     token. Give the token scopes on ``repo``, ``write:packages``,
#     ``delete:packages``, ``workflow``, and ``read:gpg_key``.
# ``PYPI_USERNAME``
#     Username for pypi.org.
# ``PYPI_PASSWORD``
#     Password for ``PYPI_USERNAME``.
#


---

name: 😌 Stable integration & delivery


# Driving Event
# -------------
#
# What event starts this workflow: a push of a release tag. Note: according to
# https://git.io/JJZQt we have been doing our tag matching wrong. It's not
# regexp, it's not glob…it's more like…glob++ 😮

on:
    push:
        tags:
            - 'release/*'
concurrency: roundup


# What to Do
# ----------
#
# Round up, yee-haw!

jobs:
    stable-assembly:
        name: 🐴 Stable Assembly
        runs-on: ubuntu-latest
        steps:
            -   name: 💳 Checkout
                uses: actions/checkout@v4
                with:
                    lfs: true
                    token: ${{secrets.ADMIN_GITHUB_TOKEN}}
                    fetch-depth: 0
            -   name: 💥 DOOM
                run: |
                    echo GitHub Ref name = ${{github.ref_name}}
                    exit -1
            -   name: 💵 Python Cache
                uses: actions/cache@v4
                with:
                    path: ~/.cache/pip
                    # The "key" used to indicate a set of cached files is the operating system runner
                    # plus "py" for Python-specific builds, plus a hash of the wheels, plus "pds" because
                    # we pds-prefix everything with "pds" in PDS! 😅
                    key: pds-${{runner.os}}-py-${{hashFiles('**/*.whl')}}
                    # To restore a set of files, we only need to match a prefix of the saved key.
                    restore-keys: pds-${{runner.os}}-py-
            -   name: 💳 Docker Hub Identification
                uses: docker/login-action@v3
                with:
                    username: ${{secrets.DOCKERHUB_USERNAME}}
                    password: ${{secrets.DOCKERHUB_TOKEN}}
            -   name: 🎰 QEMU Multiple Machine Emulation
                uses: docker/setup-qemu-action@v3
            -   name: 🚢 Docker Buildx
                uses: docker/setup-buildx-action@v3
            -   name: 🤠 Roundup
                uses: NASA-PDS/roundup-action@stable
                with:
                    assembly: stable
                env:
                    pypi_username: ${{secrets.PYPI_USERNAME}}
                    pypi_password: ${{secrets.PYPI_PASSWORD}}
                    ADMIN_GITHUB_TOKEN: ${{secrets.ADMIN_GITHUB_TOKEN}}
            # At this point, the Roundup as published release/X.Y.Z to GitHub and PyPI and advanced
            # the VERSION.txt file to X.Y+1.Z, so for Docker we need to decrement the minor version
            # number by 1.
            -   name: 🫙 Docker Image Tag Determination
                id: docker_tag_determination
                run: |
                    roundup_version=$(cat ./src/pds/registrysweepers/VERSION.txt)
                    IFS='.' read -ra parts <<< "$roundup_version"
                    minor="${parts[1]}"
                    ((minor--))
                    docker_version="${parts[0]}.${minor}.${parts[2]}"
                    echo "image_tag=${docker_version}" >> $GITHUB_OUTPUT
            -   name: 🧱 Image Construction and Publication
                uses: docker/build-push-action@v5
                with:
                    context: ./
                    file: ./docker/Dockerfile
                    platforms: linux/amd64,linux/arm64
                    push: true
                    tags: ${{secrets.DOCKERHUB_USERNAME}}/registry-moppers:${{steps.docker_tag_determination.outputs.image_tag}}

...

# -*- mode: yaml; indent: 4; fill-column: 120; coding: utf-8 -*-
